name: Build and Deploy

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  PORTAINER_WEBHOOK_URL: ${{ secrets.PORTAINER_WEBHOOK_URL }}

jobs:
  build-and-push:
    name: Build and Push Docker image to GitHub Container Registry
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            NEXT_PUBLIC_URL=${{ secrets.NEXT_PUBLIC_URL }}

  deploy-to-portainer:
    name: Deploy to Portainer
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Request to Portainer Image Webhook
        if: env.PORTAINER_WEBHOOK_URL != ''
        run: |
          curl -X POST -H "Content-Type: application/json" -d '{"endpointId": "1", "imageName": "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}", "tag": "${{ steps.build-and-push.outputs.tags }}" }' ${{ env.PORTAINER_WEBHOOK_URL }}
